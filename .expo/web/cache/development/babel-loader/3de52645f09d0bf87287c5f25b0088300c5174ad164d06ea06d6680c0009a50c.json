{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ActivityIndicator } from 'react-native-paper';\nimport { GeminiService } from \"../services/GeminiService\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Voice from 'react-native-voice';\nimport { useUser } from \"../contexts/UserContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ChatScreen() {\n  var _useState = useState([{\n      from: 'ai',\n      text: 'Hi there! How can I help you today?'\n    }, {\n      from: 'user',\n      text: 'Iâ€™d like to practice my English speaking skills.'\n    }, {\n      from: 'ai',\n      text: 'Great! Letâ€™s start with a simple conversation. What else do you like to do?'\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var _useState5 = useState(function () {\n      var context = {\n        userLevel: 'intermediate',\n        focusArea: 'conversation',\n        previousExchanges: []\n      };\n      return new GeminiService(context);\n    }),\n    _useState6 = _slicedToArray(_useState5, 1),\n    geminiService = _useState6[0];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    isListening = _useState0[0],\n    setIsListening = _useState0[1];\n  var _useState1 = useState(null),\n    _useState10 = _slicedToArray(_useState1, 2),\n    speechError = _useState10[0],\n    setSpeechError = _useState10[1];\n  var _useState11 = useState('en-US'),\n    _useState12 = _slicedToArray(_useState11, 2),\n    language = _useState12[0],\n    setLanguage = _useState12[1];\n  var _useUser = useUser(),\n    user = _useUser.user,\n    setUser = _useUser.setUser;\n  React.useEffect(function () {\n    _asyncToGenerator(function* () {\n      var saved = yield AsyncStorage.getItem('chatHistory');\n      if (saved) setMessages(JSON.parse(saved));\n    })();\n  }, []);\n  React.useEffect(function () {\n    AsyncStorage.setItem('chatHistory', JSON.stringify(messages));\n  }, [messages]);\n  React.useEffect(function () {\n    _asyncToGenerator(function* () {\n      var saved = yield AsyncStorage.getItem('selectedLanguage');\n      if (saved) setLanguage(saved);\n    })();\n  }, []);\n  React.useEffect(function () {\n    Voice.onSpeechResults = function (event) {\n      if (event.value && event.value.length > 0) {\n        setInput(event.value[0]);\n        sendMessage(event.value[0]);\n      }\n      setIsListening(false);\n    };\n    Voice.onSpeechError = function (e) {\n      setIsListening(false);\n      setSpeechError('Speech recognition failed. Please try again.');\n    };\n    return function () {\n      Voice.destroy().then(Voice.removeAllListeners);\n    };\n  }, []);\n  var sendMessage = function () {\n    var _ref3 = _asyncToGenerator(function* (msg) {\n      var messageToSend = msg != null ? msg : input;\n      if (!messageToSend.trim()) return;\n      setMessages([].concat(_toConsumableArray(messages), [{\n        from: 'user',\n        text: messageToSend\n      }]));\n      setInput('');\n      setLoading(true);\n      setSpeechError(null);\n      if (user) {\n        setUser(_objectSpread(_objectSpread({}, user), {}, {\n          lessonsCompleted: (user.lessonsCompleted || 0) + 1\n        }));\n      }\n      try {\n        var aiResponse = yield geminiService.sendMessage(messageToSend);\n        setMessages(function (msgs) {\n          return [].concat(_toConsumableArray(msgs), [{\n            from: 'ai',\n            text: aiResponse\n          }]);\n        });\n      } catch (err) {\n        setMessages(function (msgs) {\n          return [].concat(_toConsumableArray(msgs), [{\n            from: 'ai',\n            text: 'Sorry, something went wrong.'\n          }]);\n        });\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function sendMessage(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var startListening = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      setIsListening(true);\n      try {\n        yield Voice.start(language);\n      } catch (e) {\n        setIsListening(false);\n      }\n    });\n    return function startListening() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS === 'ios' ? 'padding' : undefined,\n    children: [_jsx(ScrollView, {\n      style: styles.chatArea,\n      contentContainerStyle: {\n        paddingVertical: 24\n      },\n      children: messages.map(function (msg, idx) {\n        return _jsx(View, {\n          style: msg.from === 'ai' ? styles.aiBubble : styles.userBubble,\n          children: _jsx(Text, {\n            style: msg.from === 'ai' ? styles.aiText : styles.userText,\n            children: msg.text\n          })\n        }, idx);\n      })\n    }), _jsxs(View, {\n      style: styles.inputBar,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.micBtn,\n        onPress: startListening,\n        disabled: isListening,\n        children: _jsx(Text, {\n          style: styles.micIcon,\n          children: isListening ? 'ðŸŽ¤...' : 'ðŸŽ¤'\n        })\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Type a message\",\n        placeholderTextColor: \"#A0A0A0\",\n        value: input,\n        onChangeText: setInput,\n        editable: !loading && !isListening\n      }), _jsx(TouchableOpacity, {\n        style: styles.sendBtn,\n        onPress: function onPress() {\n          return sendMessage();\n        },\n        disabled: loading,\n        children: loading ? _jsx(ActivityIndicator, {\n          color: \"#fff\",\n          size: 20\n        }) : _jsx(Text, {\n          style: styles.sendText,\n          children: \"Send\"\n        })\n      })]\n    }), speechError && _jsx(Text, {\n      style: {\n        color: 'red',\n        textAlign: 'center',\n        marginTop: 8\n      },\n      children: speechError\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F7F9FB'\n  },\n  chatArea: {\n    flex: 1,\n    paddingHorizontal: 16\n  },\n  aiBubble: {\n    alignSelf: 'flex-start',\n    backgroundColor: '#F5F5F5',\n    borderRadius: 16,\n    padding: 14,\n    marginBottom: 12,\n    maxWidth: '80%'\n  },\n  aiText: {\n    color: '#222',\n    fontSize: 16\n  },\n  userBubble: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#E3F2FD',\n    borderRadius: 16,\n    padding: 14,\n    marginBottom: 12,\n    maxWidth: '80%'\n  },\n  userText: {\n    color: '#1976D2',\n    fontSize: 16\n  },\n  inputBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 16,\n    borderTopWidth: 1,\n    borderColor: '#E0E3E7',\n    backgroundColor: '#fff'\n  },\n  input: {\n    flex: 1,\n    backgroundColor: '#F7F9FB',\n    borderRadius: 12,\n    padding: 14,\n    fontSize: 16,\n    borderWidth: 1,\n    borderColor: '#E0E3E7',\n    marginRight: 8\n  },\n  sendBtn: {\n    backgroundColor: '#1976D2',\n    borderRadius: 12,\n    paddingVertical: 12,\n    paddingHorizontal: 20\n  },\n  sendText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  micBtn: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 10,\n    marginRight: 8,\n    borderWidth: 1,\n    borderColor: '#E0E3E7',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  micIcon: {\n    fontSize: 22,\n    color: '#1976D2'\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","TextInput","ScrollView","Text","TouchableOpacity","KeyboardAvoidingView","Platform","ActivityIndicator","GeminiService","AsyncStorage","Voice","useUser","jsx","_jsx","jsxs","_jsxs","ChatScreen","_useState","from","text","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","input","setInput","_useState5","context","userLevel","focusArea","previousExchanges","_useState6","geminiService","_useState7","_useState8","loading","setLoading","_useState9","_useState0","isListening","setIsListening","_useState1","_useState10","speechError","setSpeechError","_useState11","_useState12","language","setLanguage","_useUser","user","setUser","useEffect","_asyncToGenerator","saved","getItem","JSON","parse","setItem","stringify","onSpeechResults","event","value","length","sendMessage","onSpeechError","e","destroy","then","removeAllListeners","_ref3","msg","messageToSend","trim","concat","_toConsumableArray","_objectSpread","lessonsCompleted","aiResponse","msgs","err","_x","apply","arguments","startListening","_ref4","start","style","styles","container","behavior","OS","undefined","children","chatArea","contentContainerStyle","paddingVertical","map","idx","aiBubble","userBubble","aiText","userText","inputBar","micBtn","onPress","disabled","micIcon","placeholder","placeholderTextColor","onChangeText","editable","sendBtn","color","size","sendText","textAlign","marginTop","create","flex","backgroundColor","paddingHorizontal","alignSelf","borderRadius","padding","marginBottom","maxWidth","fontSize","flexDirection","alignItems","borderTopWidth","borderColor","borderWidth","marginRight","fontWeight","justifyContent"],"sources":["/workspaces/ai-english-tutor-v2/src/screens/ChatScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet, TextInput, ScrollView, Text, TouchableOpacity, KeyboardAvoidingView, Platform } from 'react-native';\nimport { ActivityIndicator } from 'react-native-paper';\nimport { GeminiService, ConversationContext } from '../services/GeminiService';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as Speech from 'expo-speech';\nimport Voice from 'react-native-voice';\nimport { useUser } from '../contexts/UserContext';\n\nexport default function ChatScreen() {\n  const [messages, setMessages] = useState([\n    { from: 'ai', text: 'Hi there! How can I help you today?' },\n    { from: 'user', text: 'Iâ€™d like to practice my English speaking skills.' },\n    { from: 'ai', text: 'Great! Letâ€™s start with a simple conversation. What else do you like to do?' },\n  ]);\n  const [input, setInput] = useState('');\n  const [geminiService] = useState(() => {\n    const context: ConversationContext = {\n      userLevel: 'intermediate',\n      focusArea: 'conversation',\n      previousExchanges: [],\n    };\n    return new GeminiService(context);\n  });\n  const [loading, setLoading] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [speechError, setSpeechError] = useState<string | null>(null);\n  const [language, setLanguage] = useState('en-US');\n  const { user, setUser } = useUser();\n\n  React.useEffect(() => {\n    (async () => {\n      const saved = await AsyncStorage.getItem('chatHistory');\n      if (saved) setMessages(JSON.parse(saved));\n    })();\n  }, []);\n\n  React.useEffect(() => {\n    AsyncStorage.setItem('chatHistory', JSON.stringify(messages));\n  }, [messages]);\n\n  React.useEffect(() => {\n    (async () => {\n      const saved = await AsyncStorage.getItem('selectedLanguage');\n      if (saved) setLanguage(saved);\n    })();\n  }, []);\n\n  React.useEffect(() => {\n    Voice.onSpeechResults = (event) => {\n      if (event.value && event.value.length > 0) {\n        setInput(event.value[0]);\n        sendMessage(event.value[0]); // Auto-send recognized text\n      }\n      setIsListening(false);\n    };\n    Voice.onSpeechError = (e) => {\n      setIsListening(false);\n      setSpeechError('Speech recognition failed. Please try again.');\n    };\n    return () => {\n      Voice.destroy().then(Voice.removeAllListeners);\n    };\n  }, []);\n\n  const sendMessage = async (msg?: string) => {\n    const messageToSend = msg ?? input;\n    if (!messageToSend.trim()) return;\n    setMessages([...messages, { from: 'user', text: messageToSend }]);\n    setInput('');\n    setLoading(true);\n    setSpeechError(null);\n    // Increment lessonsCompleted\n    if (user) {\n      setUser({\n        ...user,\n        lessonsCompleted: (user.lessonsCompleted || 0) + 1,\n      });\n    }\n    try {\n      const aiResponse = await geminiService.sendMessage(messageToSend);\n      setMessages(msgs => [...msgs, { from: 'ai', text: aiResponse }]);\n    } catch (err) {\n      setMessages(msgs => [...msgs, { from: 'ai', text: 'Sorry, something went wrong.' }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const startListening = async () => {\n    setIsListening(true);\n    try {\n      await Voice.start(language);\n    } catch (e) {\n      setIsListening(false);\n    }\n  };\n\n  return (\n    <KeyboardAvoidingView style={styles.container} behavior={Platform.OS === 'ios' ? 'padding' : undefined}>\n      <ScrollView style={styles.chatArea} contentContainerStyle={{ paddingVertical: 24 }}>\n        {messages.map((msg, idx) => (\n          <View key={idx} style={msg.from === 'ai' ? styles.aiBubble : styles.userBubble}>\n            <Text style={msg.from === 'ai' ? styles.aiText : styles.userText}>{msg.text}</Text>\n          </View>\n        ))}\n      </ScrollView>\n      <View style={styles.inputBar}>\n        <TouchableOpacity style={styles.micBtn} onPress={startListening} disabled={isListening}>\n          <Text style={styles.micIcon}>{isListening ? 'ðŸŽ¤...' : 'ðŸŽ¤'}</Text>\n        </TouchableOpacity>\n        <TextInput style={styles.input} placeholder=\"Type a message\" placeholderTextColor=\"#A0A0A0\" value={input} onChangeText={setInput} editable={!loading && !isListening} />\n        <TouchableOpacity style={styles.sendBtn} onPress={() => sendMessage()} disabled={loading}>\n          {loading ? (\n            <ActivityIndicator color=\"#fff\" size={20} />\n          ) : (\n            <Text style={styles.sendText}>Send</Text>\n          )}\n        </TouchableOpacity>\n      </View>\n      {speechError && (\n        <Text style={{ color: 'red', textAlign: 'center', marginTop: 8 }}>{speechError}</Text>\n      )}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F7F9FB',\n  },\n  chatArea: {\n    flex: 1,\n    paddingHorizontal: 16,\n  },\n  aiBubble: {\n    alignSelf: 'flex-start',\n    backgroundColor: '#F5F5F5',\n    borderRadius: 16,\n    padding: 14,\n    marginBottom: 12,\n    maxWidth: '80%',\n  },\n  aiText: {\n    color: '#222',\n    fontSize: 16,\n  },\n  userBubble: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#E3F2FD',\n    borderRadius: 16,\n    padding: 14,\n    marginBottom: 12,\n    maxWidth: '80%',\n  },\n  userText: {\n    color: '#1976D2',\n    fontSize: 16,\n  },\n  inputBar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 16,\n    borderTopWidth: 1,\n    borderColor: '#E0E3E7',\n    backgroundColor: '#fff',\n  },\n  input: {\n    flex: 1,\n    backgroundColor: '#F7F9FB',\n    borderRadius: 12,\n    padding: 14,\n    fontSize: 16,\n    borderWidth: 1,\n    borderColor: '#E0E3E7',\n    marginRight: 8,\n  },\n  sendBtn: {\n    backgroundColor: '#1976D2',\n    borderRadius: 12,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n  },\n  sendText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  micBtn: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 10,\n    marginRight: 8,\n    borderWidth: 1,\n    borderColor: '#E0E3E7',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  micIcon: {\n    fontSize: 22,\n    color: '#1976D2',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}